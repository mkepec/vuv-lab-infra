; Reverse DNS Zone File for {{ item.network }}
; Generated by Ansible on {{ ansible_date_time.iso8601 }}
; DO NOT EDIT MANUALLY - This file is managed by dns-configuration role

$TTL    {{ item.ttl | default(86400) }}
@       IN      SOA     {{ item.primary_ns | default('dns-bind.' + bind_domain + '.') }}. {{ item.admin_email | default('admin.' + bind_domain + '.') }}. (
                        {{ item.serial | default(ansible_date_time.epoch) }}  ; Serial
                        {{ item.refresh | default(3600) }}                    ; Refresh
                        {{ item.retry | default(1800) }}                      ; Retry
                        {{ item.expire | default(604800) }}                   ; Expire
                        {{ item.minimum | default(86400) }} )                 ; Minimum TTL

; Name servers
@       IN      NS      {{ item.primary_ns | default('dns-bind.' + bind_domain + '.') }}.

{% for record in item.ptr_records | default([]) %}
{{ record.ip_suffix }}    IN      PTR     {{ record.hostname }}.{% if not record.hostname.endswith(bind_domain) %}{{ bind_domain }}.{% endif %}
{% endfor %}

; PTR records for infrastructure
{% for zone in dns_zones | default([]) %}
{% for record in zone.records | selectattr('type', 'equalto', 'A') %}
{% set ip_parts = record.value.split('.') %}
{% if ip_parts[0] + '.' + ip_parts[1] + '.' + ip_parts[2] == item.network.split('/')[0].rsplit('.', 1)[0] %}
{{ ip_parts[3] }}    IN      PTR     {{ record.name }}.{{ zone.zone.name }}.
{% endif %}
{% endfor %}
{% endfor %}